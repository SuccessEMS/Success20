<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head>
    </head>
    <body>
        <h1>SAML 2.0 Troubleshooting</h1>
        <p>This section provides troubleshooting tips and information about SAML. </p>
        <ul class="unorder-list">
            <li>For an overview of SAML terminology and how SAML&#160;works, see <a href="SAMLOverview.htm">SAML&#160;2.0 Overview</a>. </li>
            <li>For instructions on configuring SAML, see <a href="../Authentication/SAMLAuthen.html">SAML&#160;Authentication</a>.</li>
        </ul>
        <h2>Troubleshooting Overview</h2>
        <p>To troubleshoot SAML&#160;configuration issues, <MadCap:annotation MadCap:createDate="2018-10-08T11:00:19.9596799-06:00" MadCap:creator="Megan.Laub" MadCap:initials="ME" MadCap:comment="Are these steps the best way to troubleshoot? Should support first verify the Platform configuration because it is a quick check, or is it not quick because every company is configured differently? If they can't quickly look over the PS Admin UI SAML Configuration fields, when should they review these fields? After performming a SAML Trace?" MadCap:editor="Megan.Laub" MadCap:editDate="2018-10-08T12:17:04.4923325-06:00">perform the following steps</MadCap:annotation>:</p>
        <ol class="number-list">
            <li>Determine where in the SAML&#160;authentication process the error or issue is occurring. Refer to <a href="SAMLOverview.htm#SAML_Authentication_Process">SAML Authentication Process</a> for a diagram and detailed description of the process.</li>
            <li>Get a copy of the SAML&#160;request (or SAML&#160;response if the authentication process has progressed far enough).<p>To get a sample SAML response, use a SAML&#160;tracer add-on tool, such as <a href="https://addons.mozilla.org/en-US/firefox/addon/saml-tracer/">Firefox SAML-tracer</a> or <a href="https://chrome.google.com/webstore/detail/saml-chrome-panel/paijfdbeoenhembfhkhllainmocckace?hl=en">SAML&#160;Chrome Panel</a>. You can also use the browser devtools; however, you will obtain better troubleshooting results with a SAML tracer tool.  Once you've added the SAML tracer to the browser, you can access the SAML-tracer add-on through a button in the upper-right of the browser.</p></li>
            <li>Review the SAML&#160;request/response to locate the potential issue.<p>What to look for in response? Under saml:Assertion (under Assertions is more attribute information; there may be multiple assertions, too), search for the attribute on the IdP response (this goes back the User Identity Field and Identity Attribute Name field, right?)</p></li>
        </ol>
        <p>For IdPs that require configuring the Service Provider in advance (for example, Azure AD), to determine what info to provide on the IdP side, do the following:</p>
        <p>IdP may want the base Service Provider base URL (in Service Provider Base URL for IdP Callback field in Platform Admin UI, https://mycompany.com/EmsPlatform). Or, IdP may need the full URL path (https://mycompany.com/EmsPlatform/api/v1/authentication/saml).</p>
        <p>Relay State Parameter – Extra component in redirect binding URL or extra Input Type in POST binding that remembers where the user was when user was determined to be unauthenticated and sent to the IdP. With this parameter (contains data about where the user was), once the user is authenticated by the IdP, the IdP can use the relay state parameter to send the user back to the page in the Web App that the user was taken from. In Platform SAML specification, relay state parameter is a destination URL. If IdP needs relay state parameter, just give them the Platform URL (IdP-initiated is not supported because Platform uses relay state to determine where to send user after IdP authenticates the user and sends the user back to Platform. [Maybe add to variations section] IdP-initiated SAML, wouldn’t know where to send the user: web app, mobile app, etc.)</p>
        <h2>Verify SAML&#160;Configuration in EMS&#160;Platform Services</h2>
        <ul>
            <li>Service Provider Requirements to make a request<ul><li>URL to send the user to for sign-on</li><li>Whether to sign the SAML request, and if signing, the key to sign the request with (signing helps IdP know for certain that Platform is the one making the request)</li></ul></li>
            <li>Identity Provider Requirements to process a request<ul><li>Identity of the Service Provider (identifier that we put in our SAML requests that tells who we are)</li><li>Once user has logged in, IdP needs URL to return users to the Service Provider</li><li>Whether to sign the SAML response, and if signing, the key to sign the response with</li></ul></li>
            <li>Service Provider Requirements to process a response<ul><li>IdP (public) key to expect signatures to have a signed with (verification). Need public key that IdP is signing with to verify their signature.</li><li>Name of the assertion to use to associate users. (Which assertion matches the network ID in our table Web User.)</li></ul></li>
        </ul>
        <p>**Use table in SAMLAuthen.html topic**</p>
        <ul>
            <li>Form Post Field Name – tend to leave default text in field</li>
            <li>User Identity Field – (REQUIRED) specify assertion element containing user identity. Can be either Name ID (from table Web User?) or Attribute (custom assertion). If set to attribute, must set the Identity Attribute Name (next field) to the expected assertion attribute name to use for user identity.</li>
            <li>Identity Attribute Name – Required when Attribute option is selected in the User Identity Field. Attribute names can be identity provider specific (such as uid or mail). Info for custom assertion really depends on the Identity Provider (simple as email or a long URL which is a reference for the assertion. Best way to find what goes in the field is to get a sample SAML response and look at assertions, find one customer cares about, and locate name attribute (which goes in field).</li>
            <li>Identity Provider Issuer – Found in the SAML response. Used to verify expected issuer of assertions, including in SAMLResponse as &lt;Issuer xmlns="urn:oasis:names:tc:SAML:2.0:assertion" &gt;http://adfs.mycompany.net/adfs/services/trust&lt;/Issuer&gt;</li>
            <li>Service Provider Issuer – In SAML request we send to IdP, this says who we are. Must match what is configured in the IdP side (ADFS needs to have same SP Issuer listed that we send in our SAML request or ADFS will reject the request). Included by EMS Platform Services in AuthnRequest requests sent to Identify Provider. This is included in the SAMLRequest as &lt;saml:Issuer&gt;https://mycompany.com/EmsPlatform&lt;/saml:Issuer&gt;<ul><li>EMS Platform Services will autogenerate the values for the Service Provider Issuer and the Service Provider Base URL for IdP Callback.</li></ul></li>
            <li>HTTP Binding Type – Specifies which SAML binding (HTTP Post or HTTP Redirect) EMS Platform Services will use to transmit SAML protocol messages. Currently only Redirect is supported.</li>
            <li>Identity Provider URL for Service Provider Redirect – REQUIRED. Tells we are going to send the user (where we send the user to log in/ authenticate). This URL (e.g., https://idp.example.org/SAML2/SSO/Redirect) includes the authentication request details provided by EMS Platform Services and contains opaque data that it includes in the request. This enables the Identify Provider to include it as Relay State on the SAMLResponse. NOTE: If you have the identity provider metadata.xml file, you can upload it through the EMS Platform Services endpoint https://company.platform/api/v1/authentication/saml/metadata/idp. The identity provider certificate will be uploaded for you and Identity Provider Issuer. The Identity Provider URL for Service Provider Redirect fields will be populated for you.</li>
            <li>Service Provider Base URL for IdP Callback – REQUIRED. Where the IdP should send the user back (where the IdP sends the user after the user logs in/ authenticates). Set this URL to the base URL of the EMS Platform Services installation (i.e., https://mycompany.com/EmsPlatform). EMS Platform Services will autogenerate the values for the Service Provider Issuer and the Service Provider Base URL for IdP Callback. Only put in the base platform URL.</li>
        </ul>
        <h2>Verify Auth Key Configuration in EMS&#160;Platform Services</h2>
        <p>After configuring SAML in the SAML tab of Admin Portal, need to set up Auth Keys (Auth Keys tab).</p>
        <p>Need to configure/add in Service Provider keys (EMS) and Identity Provider keys separately.</p>
        <p>For service provider, can autogenerate these (can be self-signed; don’t have to be from a real certificate authority)</p>
        <p>Need to format Public Key and Private Key fields in a specific manner (open ticket to fix the formatting requirement). With IdP Auth Key, we don’t need the Private Key from IdP (this field will be grayed out). For Service Provider, we can do both a Public and Private Key. For hosted customers, we are hosting the service provider, but they are hosting their own IdP. IdP Metadata only contains the Public Key.</p>
        <p>Need to clear out the Not Before and Not After fields. Certificates have their own expirations embedded in them and Platform is using those embedded expirations.</p>
        <h2>Troubleshoot SAML&#160;Metadata Import</h2>
        <p>SAML metadata describes how each side is configured and what each side wants their requests/responses to look like. Metadata helps automate the configuration process. Both sides don’t have be done automatically. One side can be automated and the other side manually configured.</p>
        <p>**When importing IdP metadata, note that we don’t have a UI for this yet. To import, use a request through Postman (or similar). POST to base with /api/v1/authentication/saml/metadata/idp. (How do they get this XML body?) The body you post into it is XML document (shows info like the embedded certificate, default Name ID assertion, tells what kind of binding they support, location to send user to). The metadata is an XML document, but our API is .json. Need to create .json payload where the only key is xml and the value is the XML payload. (Who creates the payload? Support and PS? How do they create a .json payload? What do they do with the payload file after it is created?)</p>
        <p>From our website: NOTE: [does this note need to be updated since the XML file needs a .json payload?] If you have the identity provider metadata.xml file, you can upload (POST in Postman?) it through the EMS Platform Services endpoint https://company.platform/api/v1/authentication/saml/metadata/idp. The identity provider certificate will be uploaded for you and Identity Provider Issuer. The Identity Provider URL for Service Provider Redirect fields will be populated for you.</p>
        <h2>Debugging Best Practices</h2>
        <ul>
            <li>Platform Logs – Through the PS Admin UI, in the Logs tab. Can view logs for Platform (global logs) (paste logs into Splunk?). Splunk is helpful if error is on the Service Provider side, but if on the IdP side, it just looks like the user never came back (error occurred while user was trying to log in to the IdP side). Global logs are just for Platform. Integration logs are for the integration client. SAML issues should be in global only, right (do they need to Edit Log Level Details to get useful logs for debugging SAML or this only for integrations, not global; maybe update Core doc when get answer because this is not specified in the section)?</li>
            <li>SAML Trace – Firefox and Chrome (Stephan recommends firefox SAML tracer output)</li>
        </ul>
        <h2>
            <MadCap:annotation MadCap:createDate="2018-10-08T11:04:33.5793131-06:00" MadCap:creator="Megan.Laub" MadCap:initials="ME" MadCap:comment="Are there HTTP error codes or SAML error codes or messages that support should watch for or handle a certain way?" MadCap:editor="Megan.Laub" MadCap:editDate="2018-10-08T11:31:33.0762301-06:00">Error Messages and Codes</MadCap:annotation>
        </h2>
        <p>Invalid or Missing POST parameter – Looking at the SAML response from SAML-tracer can help with this error. Could be configuration issue, such as potentially be that Platform expects redirect binding and IdP sent a POST binding instead. IdP sending a parameter we don’t expect.</p>
        <p>Important – Need to understand what point in the workflow that the error or issue is occurring. Narrow down the point in the process, such as the user has reached the IdP already so we know that the SAML request got to the IdP and then failed. Use the diagram and narrow to which of the three SAML phases the issue is occurring during.</p>
        <p>IdP may or may not need to be configured (like ADFS: needs to have URL to send users back to after user has authenticated). Platform does send URL for user redirect to the IdP and some providers don’t need any other information than the info in the request. Some need to put the info into their system (for the tested IdPs, is there a list of which require extra configuration? Then support may have potential answer for why IdP portion is causing error.). For example: Shibboleth uses URL address in request to send user back. ADFS uses the URL address in the request from Platform to verify that the address matches the URL in their system before sending user back. If URL is a location that is not configured in ADFS (valid location), ADFS will error out. Some IdPs may be automated in this process, and some may be particular and use info for verification. Same IdP could be automated and a different deployment could be more particular. Just depends on how it was set up.</p>
        <p>Browser Setting Issues</p>
        <p>A user’s browser displays the error "Can't display the webpage."</p>
        <p>A user’s browser is stuck on the redirection page.</p>
        <p>I am getting a basic Login pop-up; authentication is not transparent.</p>
        <p>Error: Your request included an invalid SAML response. To logout, click here.</p>
        <p>Error: RoleSessionName is required in AuthnResponse (Service: AWSSecurityTokenService; Status Code: 400; Error Code: InvalidIdentityToken)</p>
        <p>Error: Not authorized to perform sts:AssumeRoleWithSAML (Service: AWSSecurityTokenService; Status Code: 403; Error Code: AccessDenied)</p>
        <p>Error: RoleSessionName in AuthnResponse must match [a-zA-Z_0-9+=,.@-]{2,64} (Service: AWSSecurityTokenService; Status Code: 400; Error Code: InvalidIdentityToken)</p>
        <p>Error: Response signature invalid (Service: AWSSecurityTokenService; Status Code: 400; Error Code: InvalidIdentityToken)</p>
        <p>Error: Failed to assume role: Issuer not present in specified provider (Service: AWSOpenIdDiscoveryService; Status Code: 400; Error Code: AuthSamlInvalidSamlResponseException)</p>
        <p>Error: Could not parse metadata.</p>
        <p>Error: Requested DurationSeconds Exceeds MaxSessionDuration Set for this Role.</p>
    </body>
</html>