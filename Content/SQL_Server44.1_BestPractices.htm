<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-us">
    <head>
        <link href="Resources/TableStyles/PatternedRows.css" rel="stylesheet" MadCap:stylesheetType="table" /><title></title>
    </head>
    <body>
        <h1 MadCap:autonum="CHAPTER&#160;1: ">EMS Best Practices for SQL Server</h1>
        <h2>System&#160;</h2>
        <ul class="unorder-list">
            <li><span class="bold">Minimum Number of&#160;CPU Cores</span>
                <ul>
                    <li>Based on expected workload</li>
                </ul>
            </li>
            <li><span class="bold">Minimum&#160;RAM</span>
                <ul>
                    <li>Based on expected workload</li>
                </ul>
            </li>
            <li><span class="bold">Disks – Allocation Unit Size (AUS)</span>
                <div class="box-note">
                    <p><span class="boldAllCaps">Note:&#160;</span>Allocation Unit Size (AUS)&#160;must be configured at the time of formatting a new disk volume. It cannot be changed once the disk is used. Or, you can acquire a new disk, configure the AUS, and then migrate the data from the old disk to the new disk.</p>
                </div>
                <ul>
                    <li>Set to NTFS 64 KB for volumes containing mostly SQL data and log files.</li>
                    <li>Do not use the default of 4096 bytes.&#160;SQL stores data in 8 K pages, and there are 8 pages/extent (therefore, 64 KB/extent). This will reduce the number of IOPS.<ul><li><a href="https://blogs.msdn.microsoft.com/spucelik/2016/12/27/sql-server-disk-allocation-size/" title="https://blogs.msdn.microsoft.com/spucelik/2016/12/27/sql-server-disk-allocation-size/" class="Hyperlink">https://blogs.msdn.microsoft.com/spucelik/2016/12/27/sql-server-disk-allocation-size/</a></li><li><a href="https://technet.microsoft.com/en-us/library/cc966412.aspx" title="https://technet.microsoft.com/en-us/library/cc966412.aspx" class="Hyperlink">https://technet.microsoft.com/en-us/library/cc966412.aspx</a></li><li><a href="http://houseofbrick.com/improve-performance-as-part-of-a-sql-server-install/" title="http://houseofbrick.com/improve-performance-as-part-of-a-sql-server-install/" class="Hyperlink">http://houseofbrick.com/improve-performance-as-part-of-a-sql-server-install/</a></li><li>Comparison of 4 KB vs. 64 KB:<ul><li><a href="https://www.virtual-dba.com/disk-configuration-optimized-sql-server/" title="https://www.virtual-dba.com/disk-configuration-optimized-sql-server/" class="Hyperlink">https://www.virtual-dba.com/disk-configuration-optimized-sql-server/</a></li><li><p><a href="http://tk.azurewebsites.net/2012/08/">http://tk.azurewebsites.net/2012/08/</a>  (SQL Azure, but still SQL Server)</p></li></ul></li></ul></li>
                </ul>
            </li>
            <li><span class="bold">Anti-Virus Software</span>
                <ul>
                    <li>If you choose to use AV software, ensure you exclude SQL files per best practices from Microsoft. See&#160;<a href="#" title="EMS Best Practices for SQL Server" alt="EMS Best Practices for SQL Server">KB 309422</a>&#160;and look for the section&#160;Directories and file-name extensions to exclude from virus scanning.</li>
                </ul>
            </li>
        </ul>
        <h2>SQL Instance Properties</h2>
        <ul class="unorder-list">
            <li><span class="bold">Max SQL Memory</span>
                <ul>
                    <li>If the&#160;machine is hosting no apps other than&#160;SQL Server, maximum memory should be set to 3 to 8 GB less than the machine’s memory. For example, if the machine has 32 GB, the SQL max should be set to 28 GB. For further assistance determining the max SQL memory, use the&#160;<a href="http://sqlmax.chuvash.eu/" title="http://sqlmax.chuvash.eu/">SQL&#160;Max Memory Calculator</a>.</li>
                    <li>To set use a SQL query window. Effective immediately, no downtime required. &#160;<pre class="code-sample" xml:space="preserve">sp_configure 'show advanced options', 1 reconfigure </pre><pre class="code-sample" xml:space="preserve">sp_configure 'max server memory (MB)', 16000 reconfigure&#160;</pre></li>
                </ul>
            </li>
            <li>To determine total memory, run the following&#160;from a command window:&#160;&#160;<pre class="code-sample">systeminfo | findstr /C:"Total Physical Memory"&#160;</pre></li>
            <li><span class="bold">Maximum Degree of Parallelism (MaxDOP)</span>
                <ul>
                    <li>Depends on the number of logical CPU cores and the rank of CXPACKET in the DMV of Wait Types.</li>
                    <li>Will likely use a value higher than the default zero.</li>
                    <li>To set use a SQL query window. Effective immediately, no downtime required.<pre class="code-sample">sp_configure 'max degree of parallelism', 4 reconfigure&#160;</pre></li>
                </ul>
            </li>
            <li><span class="bold">Cost Threshold for Parallelism</span>
                <ul>
                    <li>Depends on the number of logical CPU cores and the rank of CXPACKET in the DMV of Wait Types.</li>
                    <li>Will likely use a value higher than the default 5, perhaps 25 or 50.</li>
                    <li>To set use a SQL query window. Effective immediately, no downtime required. &#160;<pre class="code-sample">sp_configure 'cost threshold for parallelism', 25 reconfigure&#160;</pre></li>
                </ul>
            </li>
            <li><span class="bold">Optimize for Ad Hoc Workloads</span>
                <ul>
                    <li>Change this from the default 0 to 1. This will help relieve memory pressure by not allowing the plan cache to become filled with compiled plans that are not reused.</li>
                    <li>To set use a SQL query window. Effective immediately, no downtime required. &#160;<pre class="code-sample">sp_configure 'optimize for ad hoc workloads', 1 reconfigure&#160;</pre></li>
                </ul>
            </li>
            <li><span class="bold">Instant File Initialization</span>
                <ul>
                    <li>This should be enabled by setting Local Security Policy. It is granted to the SQL Server service.&#160;<a href="https://www.brentozar.com/blitz/instant-file-initialization/" title="https://www.brentozar.com/blitz/instant-file-initialization/">Instructions from Brent Ozar</a>.</li>
                    <li>This allows&#160;data file auto-grows to happen instantly. If not enabled, a large file growth, such as 20 GB, might take a few minutes.</li>
                    <li>Run the following&#160;in a SQL query window to determine the current state:<pre class="code-sample">Exec sys.xp_readerrorlog 0, 1, N'Database Instant File Initialization'&#160;</pre></li>
                </ul>
            </li>
            <li><span class="bold">Compressed Backups by Default</span>
                <ul>
                    <li>This does not affect system performance; however,&#160;because&#160;compressed backups can take 20-50% of the time of an uncompressed backup, it does make a difference. </li>
                    <li>Compressed backups require less storage because compressed backups&#160;are 20–50% the size of&#160;uncompressed backups.</li>
                    <li>To set use a SQL query window. Effective immediately, no downtime required.<pre class="code-sample">sp_configure 'backup compression default', 1 reconfigure&#160;</pre></li>
                </ul>
            </li>
        </ul>
        <h2>Database Properties&#160;</h2>
        <ul class="unorder-list">
            <li>Turn on&#160;<span class="bold">Asynchronous Updating of Statistics</span></li>
            <li>Should be done in both (or all) EMS databases.</li>
            <li>To set use a SQL query window. Effective immediately, no downtime required.<ul><li>First, ensure auto-update of statistics is turned on</li></ul><pre class="code-sample">ALTER DATABASE dbNameHere SET AUTO_UPDATE_STATISTICS ON&#160;</pre><ul><li>Make auto-update of statistics to be asynchronous</li></ul><pre class="code-sample">ALTER DATABASE dbNameHere SET AUTO_UPDATE_STATISTICS_ASYNC ON</pre></li>
            <li><span class="bold">Allocated Database Size</span>
                <ul>
                    <li>There should be a&#160;<span class="bold">formula&#160;</span>with variables for how large the client database is, yielding an expected database size in bytes after one year.</li>
                    <li><span class="bold">Data file(s)</span>&#160;should anticipate a year’s growth (dependent upon formula shown&#160;above).</li>
                    <li><span class="bold">Log file</span>&#160;should be 25–50% of the size of the data files.</li>
                    <li><span class="bold">Data and log files</span>&#160;should be on separate physical disks, preferably SSD.</li>
                    <li><span class="bold">Auto-file growth&#160;</span>should be set to fixed bytes, not a percentage. Do not use the default setting of 1 MB.</li>
                </ul>
            </li>
            <li>Compatibility Level<ul><li>Background:<ul><li>A database’s compatibility level (CL) is usually the same as the version of the instance.</li><li>However it is possible to set a CL back one or more versions.</li><li>When upgrading a database to a newer version of SQL Server, the database CL may remain the same from the previous version.</li><li>There is a case when the CL for 2014 (120) is used, a performance degradation is possible.  This is a <a href="https://stackoverflow.com/questions/26528713/new-cardinality-estimator-sql-server-2014-is-way-off">documented bug</a> in the cardinality estimator of the SQL query engine in 2014.</li></ul></li><li>Ensure the CL&#160;is set as follows:</li></ul></li>
        </ul>
        <table style="mc-table-style: url('Resources/TableStyles/PatternedRows.css');margin-left: 0;margin-right: auto;" class="TableStyle-PatternedRows" cellspacing="0">
            <col class="TableStyle-PatternedRows-Column-Regular" style="width: 83px;" />
            <col class="TableStyle-PatternedRows-Column-Regular" style="width: 305px;" />
            <col class="TableStyle-PatternedRows-Column-Regular" style="width: 224px;" />
            <thead>
                <tr class="TableStyle-PatternedRows-Head-Header1">
                    <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">CL</th>
                    <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">VERSION</th>
                    <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">
                        <p>DB COMPATIBILITY</p>
                        <p>&#160;</p>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-PatternedRows-Body-LightRows">
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                        <p>110</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                        <p>SQL Server 2012 = 11.00.xxxx</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                        <p>110</p>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                    <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">
                        <p>120</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">
                        <p>SQL Server 2014 = 12.00.xxxx</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyD-Regular-DarkerRows">
                        <p>110 (avoid CL&#160;for 2014)</p>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows-Body-LightRows">
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                        <p>130</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">
                        <p>SQL Server 2016 = 13.00.xxxx</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                        <p>130</p>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                    <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">
                        <p>140</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">
                        <p>SQL Server 2017* = 14.00.xxxx</p>
                    </td>
                    <td class="TableStyle-PatternedRows-BodyD-Regular-DarkerRows">
                        <p>140</p>
                    </td>
                </tr>
                <tr class="TableStyle-PatternedRows-Body-LightRows">
                    <td class="TableStyle-PatternedRows-BodyB-Regular-LightRows">&#160;</td>
                    <td class="TableStyle-PatternedRows-BodyA-Regular-LightRows" colspan="2">*<span class="bold">NOTE</span>:&#160;2017 is not yet officially supported by EMS. </td>
                </tr>
            </tbody>
        </table>
        <h2>tempdb&#160;</h2>
        <ul class="unorder-list">
            <li><span class="bold">tempdb</span>&#160;is a system database&#160;and the temporary work space (scratchpad) for a data server’s query processing. It is critical this be configured for maximum efficiency. In versions SQL 2014 and prior, tempdb’s default settings are incorrect for proper configuration. This out-of-the-box configuration will likely be a bottleneck.</li>
            <li>Should be located on yet another physical disk or on SSD. <b>Tempdb</b> should be on&#160;<span class="bold">fastest disk available</span>. Fault tolerance is not needed.</li>
            <li><span class="bold">Number of data files</span>&#160;should equal the number of logical CPU cores, up to 8.</li>
            <li><span class="bold">Data files</span>&#160;should be the&#160;same size.</li>
            <li><span class="bold">Only one log file</span>&#160;should be used.</li>
            <li><span class="bold">Auto-file growth</span>&#160;should be set to&#160;fixed bytes, not percentage, anticipating no grows.</li>
        </ul>
        <h2>SQL Instance Maintenance&#160;</h2>
        <ul class="unorder-list">
            <li>The following maintenance should be run at least weekly:<ul><li><span class="bold">Defragmentation—</span>REBUILD&#160;or REORGANIZE of indexes should be performed weekly<ul><li>Threshold for reorganize:  5% fragmentation</li><li>Threshold for rebuild:  15% fragmentation</li></ul><ul><li><span class="bold">DBCC CheckDB—</span>Should be done weekly at off-peak hours.  This for ensuring integrity of the storage media.<pre class="code-sample">DBCC CheckDB (EMS)</pre></li></ul><div><blockquote><pre class="code-sample">DBCC CheckDB (EMS_master)</pre></blockquote></div></li><li><span class="bold">Update Statistics—</span>Should be done weekly by one of these methods, at off-peak hours.<ul><li><pre class="code-sample"><span style="color: #0000ff;">Use </span>EMS</pre></li><li><pre class="code-sample"><span style="color: #0000ff;">Exec </span>sp_updatestats</pre></li><li><pre class="code-sample"><span style="color: #0000ff;">USE </span>EMS_Master</pre></li><li><pre class="code-sample"><span style="color: #0000ff;">Exec </span>sp_updatestats</pre></li></ul></li></ul><p>Or optionally, if much data has been changed:</p><ul><li><pre class="code-sample"><span style="color: #ff00ff;">UPDATE </span><span style="color: #0000ff;">STATISTICS </span>TableName <span style="color: #0000ff;">WITH FULLSCAN</span></pre></li><li><span class="bold">Manage number of Virtual Log Files (VLFs</span>)<ul><li>High VLFs contribute to poor performance.  This needs to be checked weekly.  Anything over 50 should be addressed by shrinking the log then resizing to a size that will NOT anticipate any growth.</li><li>This is essentially fragmentation of data log files due to auto-grow.  If auto-growth is set to too small an increment, there will be many auto-increments, causing a high number of VLFs.</li></ul></li></ul></li>
        </ul>
    </body>
</html>